name,title,val
ダンジョン,Welcome,"コマンドを駆使して Linux Dungeon を探索しよう! <br>このdungeon 内にあ るディレクトリ(部屋)やファイル(アイテム)を調べ、問題に答えよう! このUNIXというOS はコマンドという命令文を実行することで操作を行う。また、コマンドは「$」の後ろで実行出来る。では、早速コマンドを実行してみよう!<br> $ source ./Game_Start<br>もし、宝箱で手に入れた知識を試したいときは<br>$tutorial mode<br>と実行しよう。"
cd,移動してみよう,"ダンジョンを探索するためには次のディレクトリ(部屋)に移動する方法がなくてはならない。次のディレクトリ(部屋) に移動するコマンドが cd コマンドである。<br>cd コマンドを実行してみよう<br>$cd dungeon<br> $<br> 移動をした結果、「$」記号より前にあった「˜」 が「dungeon」に変化し、 dungeon に移動できたことが分かる。本当に dungeon に移動できたか確認したいなら、pwdコマンドを実行してみよう。もし、問題を解いている最中に迷子になってしまったら、もう 1 度、問題文のコマンドを実行すればいい。"
ls,ディレクトリの中身を調べてみよう,"次のディレクトリ(部屋)へ移動しようとしても、次に移動できるディレクトリ(部屋) の名前がわからないと移動できない。 今いる部屋から次に行けるディレクトリ(部屋)を表示するコマンドがlsコマンドである。lsコマンドを実行してみよう<br>$ls<br>dungeon Treasure_Chest<br>確認してみると、今いるディレクトリ (部屋) には dungeon という次に進めるディレクトリ(部屋) とTreasure_chestというファイル (アイテム) があ ることが分かる。"
cat,ファイルの中身を調べてみよう,"ファイル(アイテム)の中身を確認するコマンドはどんなコマンドだろうか？そのコマンド$cat [調べたいファイル] という形式で調べたいファイル(アイテム)の中身を確認することができる。 catコマンドを実行してみよう。 <br>$cat Treasure _Chest <br>You got a silver coin. <br>$ <br>どうやらTresure_Chest というファイル (アイテム) には silver coin が入っていたみたいだ。"
pwd,自分のいる場所を調べてみよう,"探索を進めていくと自分がどこのディレクトリ(部屋) にいるかわからなくなってしまうときがある。<br>そんな時に役に立つのがpwdコマンドである。pwdコマンドは今、作業をしているユーザの作業をしているディレクトリ (部屋) を表示するコマンドである。<br>試しにpwd コマンドを実行してみよう。<br>$pwd <br>/home/student/tutorial<br> $ <br>「user」の部分はあなたのアカウント名である。この/home/student/tutorial は、「home ディレクトリの次の student ディレクトリの tutorial ディレクト リ」という意味である。なので、今現在、自分の作業しているディレクトリ (部屋) が/home/student/tutorial であることが分かる。"
絶対パス,絶対パスとは,"さっきの例題ではpwdコマンドを実行したときに、/home/student/tutorial のように表示された。この/home/student/tutorial は、今現在のユーザが作業しているディレクトリの位置を表していた。このように「/」から始める ディレクトリの位置を表す方法を絶対パスという。絶対パスの使い方をみていこう。<br> $cd /home/student/tutorial<br>この場合は、「今現在、ユーザが作業しているディレクトリに関係なく/home/student/tutorial に移動する」という意味があり、<br> $ls /home/student/tutorial<br> は「今現在、ユーザが作業しているでしょうで生じた関係なく/home/student/tutorial というディレクトリの中身を確認する」という意味である。このように絶対パス と一緒にコマンドを実行することもできる。また、 $cat /home/student/Tresure_chest のようにした場合はどういう意味だろうか？考えてみよう。"
相対パス,相対パスとは,"「.」を現在いるディレクト、「..」を1つ前のディレクトリとして使える。例えば、pwdコマンドの実行結果が/home/studentだったなら、「.」が/home/student、「..」が/home を意味する。「./」のように「/」から始めないでディレクトリの位置を表す方法を相対パスという。 この相対パスは絶対パスと同じように使える。もし、絶対パスが分からない場合はダンジョン内の他の宝箱の中身も確認 してくるといい。"
"ls -a",隠しファイルをみてみよう,"lsコマンドだけではすべてのファイルを確認することができない。試しに次のコマンドを実行してみよう。 <br>$ls -a<br>. .. .Treasure Chest Treasure Chest dungeon<br>このような結果が返ってくる。この出力結果は、ただlsと実行した時とは明らかに異なる。異なる点は、「.」から始まるファイルが表示されたことである。この「.」から始まるファイルを隠しファイルと呼ぶ。ls コマンドに-a をつけ ることでこの隠しファイルをみることができる。"
"*, ?",ワイルドカードをつかおう,"「.txt」で終わるファイルだけをlsで表示させたという場合にはどうすれば よいのだろうか。それはワイルドカードを使えば解決できる。ワイルドカー ドには「*」と「?」の 2 つがある。「*」は任意の文字列という意味があり、「?」は任意の 1 文字という意味が ある。今回の場合なら、 $ls *.txt と実行することで 「.txt」で終わるファイルだけを表示できる。"
環境変数,環境変数とは,"ファイルには実行ファイルと呼ばれるものがある。$(実行ファイルのパス) のようなコマンドを実行することで、その実行ファイル内容通りの処理が行われる。先ほどまでに習得したlsコマンドやpwdコマンドなど、すべてのコマンドは実行ファイルである。これらのコマンドは/bin というディレクトリの下にあるのにもかかわらず、 $/bin/ls のように実行しなくても $ls だけで実行できる。これは「PATH」と呼ばれる環境変数からである。試しに環境変数を確認してみよう。<br>$ echo $PATH<br>この出力結果はどのような意味だろうか？考えてみよう。"
uniq,重複を消そう,"catコマンドでファイルをみたときに同じ文字列が複数行にわたって繰り返し表示された。この繰り返しを表示させない方法がある。それがuniqコマ ンドである。では、uniqコマンドを実行してみよう。 <br>$cat .Treasure Chest |uniq <br>cat コマンドと uniq コマンドの間には「|」を入れる必要がある。この「|」 をパイプと言い、コマンドの実行結果を次のコマンドに渡すという意味がある。これを実行するということは、「catコマンドで表示される内容がuniqコマンドによって繰り返しが省略される」という意味がある。このコマンドを実行することでTreasure boxに含まれる繰り返しが省略される。 また、「uniq」の部分を「uniq -c」とすることで、省略した行数も表示することができる。"
sort,並び替えよう,"ファイル中身を確認するときに並べ替えると便利なことがある。ファイル の中身を並び替えるコマンドにsortコマンドがある。<br>実行してみよう。<br>$cat .Tresure_Chest |sort<br> このように実行すると、アルファベット順にファイルが並べ替える。また、 sort コマンドと同時にuniqコマンドも実行出来る。このように複数のコマン ドを実行する。その場合はコマンドとコマンドの間にパイプが必要である。"
???,GO,"6666666<br>3333336<br>3333336<br>3333336<br>3333336<br>3333336<br>3333336<br>3333336<br>3300036<br>3000036<br>3001036<br>3000036<br>3000036<br>3300056<br>5533356<br>3553556<br>3353536<br>3355536<br>3333336<br>3333336<br>3333336<br>6666666"
